var AppNormalize = (function() {
    var module = {};
    var _thisModuleName = "AppNormalize";
    var _assessmentIdentifier = "txkea_circle";
    var _thisLineageSource = `Edvantage ${_assessmentIdentifier} Loader v1.0`;
    var multipleRowsPerGroupingExpected = false;

    /**
     * Converts an assessment source file into the normalized assessment format.
     *
     * @param file The raw source file being reviewed.
     * @param signature The signature file details in JSON format.
     * @returns {String} The location of the normalized file.
     */
    module.createNormalizedFile = function(file, signature) {
		try {

			var signatureFormatName = signature.getFormat().getFormatName();
            print(`Loading using signature file ${signatureFormatName}\n`);

			//Initialize path and lineage variables.
			var normalizedFile = AppUtil.createResultsFile(file);

			print(`Normalized file: ${normalizedFile}\n`);

			var hierarchy = AppUtil.getAssessmentHierarchyDetails(file);
			var lineNumber = 0;
			const fileFullName = file.getFullName();

			//Process data file records.
			_dataflow.create("RECORD BUILD")
				.input("INPUT", AppUtil.getInputDataflow(file, signature))
				.transform("ADD LINEAGE FIELD", ["RECORDS"], function (output, json) {

					json.LINEAGE_FILE = fileFullName;
					json.LINEAGE_LINE = (++lineNumber).toString();
					output.RECORDS.put(json);
				})
				.group_by("ADMINISTRATION GROUPING" , function(one, two){
					try {
						var rowOne = AppSignatureFieldDetails.getFieldDetailsParser(signature, one);
						var rowTwo = AppSignatureFieldDetails.getFieldDetailsParser(signature, two);

						return groupAssessmentByNaturalKey(signature, hierarchy, rowOne, rowTwo);
					} catch(exception) {
						AssessmentLoader.audits.push(AppAudit.writeRejectRecord(hierarchy.SOURCE_FILE.getFilePath(), "HIGH",one.LINEAGE_LINE, "ADMINISTRATION GROUPING dataflow error: ${exception}", JSON.stringify(one) + "|" + JSON.stringify(two)));
					}

				})
				.transform("DUPLICATE ADMINISTRATION CHECK", ["RECORDS"], function (output, rows) {
					try{
						if(!multipleRowsPerGroupingExpected && rows.length > 1){

							//Report error for each row
							rows.forEach(function(row){
								AssessmentLoader.audits.push(AppAudit.writeRejectRecord(file.getFilePath(), "WARNING",json.LINEAGE_LINE, "Duplicate record natural key in source assessment file.", JSON.stringify(row)));
							});

						} else {
							output.RECORDS.put(rows);
						}
					} catch(exception) {
						AssessmentLoader.audits.push(AppAudit.writeRejectRecord(hierarchy.SOURCE_FILE.getFilePath(), "WARNING", rows[0].LINEAGE_LINE, "DUPLICATE ADMINISTRATION CHECK dataflow error: ${exception}", JSON.stringify(rows)));
					}
				})
				.transform("NORMALIZE RECORDS", ["RECORDS"],
					function(output, rows) {
						try{

							var normalizedRecords = mapNormalizedRecords(signature, hierarchy, rows);

							normalizedRecords.forEach(function(record){
								output.RECORDS.put(record);
							});

						} catch(exception) {
							AssessmentLoader.audits.push(AppAudit.writeRejectRecord(hierarchy.SOURCE_FILE.getFilePath(), "HIGH",rows[0].LINEAGE_LINE, "TRANSFORMATION dataflow error: ${exception}", JSON.stringify(rows)));
						}


					})
				.transform("SCORE COUNT CHECK", ["RECORDS"], function (output, row) {
					try {
						var mappingObject = JSON.parse(row.ASSESSMENT_JSON_MAPPINGS);

						// Report when no scores are found.
						if(mappingObject.SCORE_MAPPINGS.length === 0){
							AssessmentLoader.audits.push(AppAudit.writeRejectRecord(file.getFilePath(), "WARNING",row.LINEAGE_LINE, "No scores found.", JSON.stringify(row)));
						} else {
							output.RECORDS.put(row);
						}
					} catch(exception) {
						AssessmentLoader.audits.push(AppAudit.writeRejectRecord(hierarchy.SOURCE_FILE.getFilePath(), "HIGH", _util.coalesce(row.LINEAGE_LINE, -1), "SCORE COUNT CHECK dataflow error: ${exception}", JSON.stringify(row)));
					}
				})
				.output("OUTPUT", _io.delim_output(normalizedFile, "\t", "\"", "\\",false))
				.execute_markII(AssessmentLoader.config.ENABLE_DEBUG, 200, 1, 100);

			return normalizedFile;

		} catch(exception) {
			throw `${_thisModuleName}.createNormalizedFile Exception: ${exception}`;
		}
    };


    /**
     * Merges a normalized file into the master normalized file.
     *
     * @param file The normalized assessment file to be merged.
     * @returns {file} The merged normalized file.
     */
    module.mergeAssessment = function(file) {
        return AppDataflow.mergeAssessment(file);
    };

    /***************************************************************************
     Assessment-specific Objects
     ***************************************************************************/

    var scoresToMap = [
    //CIRCLE
     {TEST_NUMBER_SUFFIX:"RLN", TEST_FIELD_SUFFIX: "RLN", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"RLN", TEST_FIELD_SUFFIX: "RLNA", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}

    //Rapid Vocabulary
	,{TEST_NUMBER_SUFFIX:"RV_1", TEST_FIELD_SUFFIX: "RV_SET1", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "RV_SET1"}
	,{TEST_NUMBER_SUFFIX:"RV_1", TEST_FIELD_SUFFIX: "RV_SET1", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "RV_SET1"}
	,{TEST_NUMBER_SUFFIX:"RV_2", TEST_FIELD_SUFFIX: "RV_SET2", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "RV_SET2"}
	,{TEST_NUMBER_SUFFIX:"RV_2", TEST_FIELD_SUFFIX: "RV_SET2", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "RV_SET2"}
	,{TEST_NUMBER_SUFFIX:"RV3", TEST_FIELD_SUFFIX: "RV_SET3", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "RV_SET3"}
	,{TEST_NUMBER_SUFFIX:"RV3", TEST_FIELD_SUFFIX: "RV_SET3", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "RV_SET3"}
	//2019 RV
	,{TEST_NUMBER_SUFFIX:"RV", TEST_FIELD_SUFFIX: "RAPID_VOCABULARY", LANGUAGE:"ENG", MAP_FUNCTION: mapOverallScore, SUBITEM: "RV"}
    ,{TEST_NUMBER_SUFFIX:"RV", TEST_FIELD_SUFFIX: "RAPID_VOCABULARY", LANGUAGE:"SPA", MAP_FUNCTION: mapOverallScore, SUBITEM: "RV"}
	,{TEST_NUMBER_SUFFIX:"RV_SET1", TEST_FIELD_SUFFIX: "RAPID_VOCABULARY", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "RV_SET1"}
	,{TEST_NUMBER_SUFFIX:"RV_SET1", TEST_FIELD_SUFFIX: "RAPID_VOCABULARY", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "RV_SET1"}
	,{TEST_NUMBER_SUFFIX:"RV2", TEST_FIELD_SUFFIX: "RAPID_VOCABULARY", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "RV_SET2"}
	,{TEST_NUMBER_SUFFIX:"RV2", TEST_FIELD_SUFFIX: "RAPID_VOCABULARY", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "RV_SET2"}
	,{TEST_NUMBER_SUFFIX:"RV3", TEST_FIELD_SUFFIX: "RAPID_VOCABULARY", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "RV_SET3"}
	,{TEST_NUMBER_SUFFIX:"RV3", TEST_FIELD_SUFFIX: "RAPID_VOCABULARY", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "RV_SET3"}

	,{TEST_NUMBER_SUFFIX:"PA", TEST_FIELD_SUFFIX: "PA", LANGUAGE:"ENG", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"PA", TEST_FIELD_SUFFIX: "PA", LANGUAGE:"SPA", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"PA_SYL_1", TEST_FIELD_SUFFIX: "PA_SYL", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "SYLLABICATION"}
	,{TEST_NUMBER_SUFFIX:"PA_SYL_1", TEST_FIELD_SUFFIX: "PA_SYL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "SYLLABICATION"}
	,{TEST_NUMBER_SUFFIX:"PA_SYL", TEST_FIELD_SUFFIX: "PA", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "SYLLABICATION"}
	,{TEST_NUMBER_SUFFIX:"PA_SYL", TEST_FIELD_SUFFIX: "PA", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "SYLLABICATION"}
	,{TEST_NUMBER_SUFFIX:"PA_ONR_1", TEST_FIELD_SUFFIX: "PA_ONR", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "ONSET-RIME"}
	,{TEST_NUMBER_SUFFIX:"PA_ONR", TEST_FIELD_SUFFIX: "PA", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "ONSET-RIME"}
	,{TEST_NUMBER_SUFFIX:"PA_ALL_1", TEST_FIELD_SUFFIX: "PA_ALL", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "ALLITERATION"}
	,{TEST_NUMBER_SUFFIX:"PA_ALL_1", TEST_FIELD_SUFFIX: "PA_ALL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "ALLITERATION"}
	,{TEST_NUMBER_SUFFIX:"PA_RHY_I", TEST_FIELD_SUFFIX: "PA_RHY", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "RHYMING_I"}
	,{TEST_NUMBER_SUFFIX:"PA_RHY_I", TEST_FIELD_SUFFIX: "PA_RHY", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "RHYMING_I"}

	,{TEST_NUMBER_SUFFIX:"PA_ALL", TEST_FIELD_SUFFIX: "PA", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "ALLITERATION"}
	,{TEST_NUMBER_SUFFIX:"PA_ALL", TEST_FIELD_SUFFIX: "PA", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "ALLITERATION"}
	,{TEST_NUMBER_SUFFIX:"PA_RHY", TEST_FIELD_SUFFIX: "PA", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "RHYMING_I"}
	,{TEST_NUMBER_SUFFIX:"PA_RHY", TEST_FIELD_SUFFIX: "PA", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "RHYMING_I"}

	,{TEST_NUMBER_SUFFIX:"PA_OPT", TEST_FIELD_SUFFIX: "PA_OPT", LANGUAGE:"ENG", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"PA_OPT", TEST_FIELD_SUFFIX: "PA_OPT", LANGUAGE:"SPA", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"PA_OPT", TEST_FIELD_SUFFIX: "PA_OPTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"PA_OPT_LIS_1", TEST_FIELD_SUFFIX: "PA_OPT_LIS", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "LISTENING_V2"}

	,{TEST_NUMBER_SUFFIX:"PA_OPT_LIS", TEST_FIELD_SUFFIX: "PA_OPT", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "LISTENING_V2"}
    ,{TEST_NUMBER_SUFFIX:"PA_OPT_LIS", TEST_FIELD_SUFFIX: "PA_OPTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "LISTENING_V2"}
    ,{TEST_NUMBER_SUFFIX:"PA_OPT_LIS", TEST_FIELD_SUFFIX: "PA_OPTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "LISTENING"}
	,{TEST_NUMBER_SUFFIX:"PA_OPT_WOR_1", TEST_FIELD_SUFFIX: "PA_OPT_WOR", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "WORDS_V2"}
	,{TEST_NUMBER_SUFFIX:"PA_OPT_WOR", TEST_FIELD_SUFFIX: "PA_OPT", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "WORDS_V2"}
    ,{TEST_NUMBER_SUFFIX:"PA_OPT_WOR", TEST_FIELD_SUFFIX: "PA_OPTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "WORDS_V2"}
    ,{TEST_NUMBER_SUFFIX:"PA_OPT_WOR", TEST_FIELD_SUFFIX: "PA_OPTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "WORDS"}
    ,{TEST_NUMBER_SUFFIX:"PA_OPT_RHY2_II", TEST_FIELD_SUFFIX: "PA_OPT_RHY2", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "RHYMING_II_V2"}


	,{TEST_NUMBER_SUFFIX:"PA_OPT_RHY2", TEST_FIELD_SUFFIX: "PA_OPT", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "RHYMING_II_V2"}
    ,{TEST_NUMBER_SUFFIX:"PA_OPT_RHY2", TEST_FIELD_SUFFIX: "PA_OPTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "RHYMING_II_V2"}
    ,{TEST_NUMBER_SUFFIX:"PA_OPT_RHY2", TEST_FIELD_SUFFIX: "PA_OPTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "RHYMING_II"}

	,{TEST_NUMBER_SUFFIX:"MA_RC_1", TEST_FIELD_SUFFIX: "MA_RC", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "ROTE_COUNTING"}
	,{TEST_NUMBER_SUFFIX:"MA_SN_1", TEST_FIELD_SUFFIX: "MA_SN", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "SHAPE_NAMING"}
	,{TEST_NUMBER_SUFFIX:"MA_ND_1", TEST_FIELD_SUFFIX: "MA_ND", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "NUMBER_DISCRIMINATION"}
	,{TEST_NUMBER_SUFFIX:"MA_NN_1", TEST_FIELD_SUFFIX: "MA_NN", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "NUMBER_NAMING"}
	,{TEST_NUMBER_SUFFIX:"MA_SD_1", TEST_FIELD_SUFFIX: "MA_SD", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "SHAPE_DISC"}
	,{TEST_NUMBER_SUFFIX:"MA_COU_1", TEST_FIELD_SUFFIX: "MA_COU", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "COUNTING"}
	,{TEST_NUMBER_SUFFIX:"MA_OPE_1", TEST_FIELD_SUFFIX: "MA_OPE", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "OPERATIONS"}

	,{TEST_NUMBER_SUFFIX:"MA", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"MA", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SPA", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"MA_RC", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "ROTE_COUNTING"}
	,{TEST_NUMBER_SUFFIX:"MA_RC", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "ROTE_COUNTING"}
	,{TEST_NUMBER_SUFFIX:"MA_RC2", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "ROTE_COUNTING_V2"}
	,{TEST_NUMBER_SUFFIX:"MA_RC2", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "ROTE_COUNTING_V2"}
	,{TEST_NUMBER_SUFFIX:"MA_SN", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "SHAPE_NAMING"}
	,{TEST_NUMBER_SUFFIX:"MA_SN", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "SHAPE_NAMING"}
	,{TEST_NUMBER_SUFFIX:"MA_ND", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "NUMBER_DISCRIMINATION"}
	,{TEST_NUMBER_SUFFIX:"MA_ND", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "NUMBER_DISCRIMINATION"}
	,{TEST_NUMBER_SUFFIX:"MA_NN", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "NUMBER_NAMING"}
    ,{TEST_NUMBER_SUFFIX:"MA_NN", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "NUMBER_NAMING"}
    ,{TEST_NUMBER_SUFFIX:"MA_NN", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "NUMBER_NAME"}
	,{TEST_NUMBER_SUFFIX:"MA_SD", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "SHAPE_DISC"}
	,{TEST_NUMBER_SUFFIX:"MA_SD", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "SHAPE_DISC"}
	,{TEST_NUMBER_SUFFIX:"MA_COU", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "COUNTING"}
	,{TEST_NUMBER_SUFFIX:"MA_COU", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "COUNTING"}
	,{TEST_NUMBER_SUFFIX:"MA_OPE", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "OPERATIONS"}
	,{TEST_NUMBER_SUFFIX:"MA_OPE", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "OPERATIONS"}

	,{TEST_NUMBER_SUFFIX:"MA_OPT", TEST_FIELD_SUFFIX: "MATH_OPT", LANGUAGE:"ENG", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"MA_OPT", TEST_FIELD_SUFFIX: "MATH_OPT", LANGUAGE:"SPA", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"MA_OPT_PAT_1", TEST_FIELD_SUFFIX: "MA_OPT_PAT", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "PATTERNS"}

	,{TEST_NUMBER_SUFFIX:"MA_OPT_PAT", TEST_FIELD_SUFFIX: "MATH_OPT", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "PATTERNS"}
	,{TEST_NUMBER_SUFFIX:"MA_OPT_PAT", TEST_FIELD_SUFFIX: "MATH_OPT", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "PATTERNS"}
	,{TEST_NUMBER_SUFFIX:"MA_OPT_RW_1", TEST_FIELD_SUFFIX: "MA_OPT_RW", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "REAL_WORLD"}

	,{TEST_NUMBER_SUFFIX:"MA_OPT_RW", TEST_FIELD_SUFFIX: "MATH_OPT", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "REAL_WORLD"}
	,{TEST_NUMBER_SUFFIX:"MA_OPT_RW", TEST_FIELD_SUFFIX: "MATH_OPT", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "REAL_WORLD"}

    ,{TEST_NUMBER_SUFFIX:"LS", TEST_FIELD_SUFFIX: "LETTER_SOUND", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"LS", TEST_FIELD_SUFFIX: "LETTER_SOUND", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"LS", TEST_FIELD_SUFFIX: "LETTER_SOUND", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "LSCT"}
    ,{TEST_NUMBER_SUFFIX:"LS", TEST_FIELD_SUFFIX: "LETTER_SOUND", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "LSCT"}
    ,{TEST_NUMBER_SUFFIX:"SRC", TEST_FIELD_SUFFIX: "STORY_RETELL_COMP", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"SRC", TEST_FIELD_SUFFIX: "STORY_RETELL_COMP", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"SRC", TEST_FIELD_SUFFIX: "STORY_RETELL_COMP", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "STORY_RETELL"}
    ,{TEST_NUMBER_SUFFIX:"SRC", TEST_FIELD_SUFFIX: "STORY_RETELL_COMP", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "SRCA_SPA_V1_SCORE_ITEM"}

	,{TEST_NUMBER_SUFFIX:"BPK", TEST_FIELD_SUFFIX: "BOOK_PRINT", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "BPC"}
    ,{TEST_NUMBER_SUFFIX:"BPK", TEST_FIELD_SUFFIX: "BOOK_PRINT", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "BPC"}
    ,{TEST_NUMBER_SUFFIX:"BPK", TEST_FIELD_SUFFIX: "BOOK_PRINT", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"BPK", TEST_FIELD_SUFFIX: "BOOK_PRINT", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}

	,{TEST_NUMBER_SUFFIX:"SCI", TEST_FIELD_SUFFIX: "SCIENCE", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "SCIENCE_ENG"}
    ,{TEST_NUMBER_SUFFIX:"SCI", TEST_FIELD_SUFFIX: "SCIENCE", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "SCIENCE"}

	,{TEST_NUMBER_SUFFIX:"SCI", TEST_FIELD_SUFFIX: "SCIENCE", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"SCI", TEST_FIELD_SUFFIX: "SCIENCE", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}

	,{TEST_NUMBER_SUFFIX:"SS", TEST_FIELD_SUFFIX: "SOCIAL_STUDIES", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "SOCIAL_STUDIES"}
    ,{TEST_NUMBER_SUFFIX:"SS", TEST_FIELD_SUFFIX: "SOCIAL_STUDIES", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "SOCIAL_STUDIES"}

    ,{TEST_NUMBER_SUFFIX:"SS", TEST_FIELD_SUFFIX: "SOCIAL_STUDIES", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"SS", TEST_FIELD_SUFFIX: "SOCIAL_STUDIES", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}

	,{TEST_NUMBER_SUFFIX:"SOCE", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL", LANGUAGE:"ENG", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"SOCE", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"SOCE_PSB", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "POSITIVE_SOCIAL"}
	,{TEST_NUMBER_SUFFIX:"SOCE_PSB2", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL_V2", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "POSITIVE_SOCIAL"}
	,{TEST_NUMBER_SUFFIX:"SOCE_PSB_1", TEST_FIELD_SUFFIX: "SOCE_PSB", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "POSITIVE_SOCIAL"}

	//,{TEST_NUMBER_SUFFIX:"SOCE_PSB", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "POSITIVE_SOCIAL"}
	//,{TEST_NUMBER_SUFFIX:"SOCE_PSB2", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL_SPA_V2", LANGUAGE:"", MAP_FUNCTION: mapScaledScore, SUBITEM: "POSITIVE_SOCIAL_SPA"}
	,{TEST_NUMBER_SUFFIX:"SOCE_PSB2", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL_SPA_V2", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "POSITIVE_SOCIAL"}
	,{TEST_NUMBER_SUFFIX:"SOCE_CCS", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "CLASSROOM_COMMUNITY_SAFETY"}
	,{TEST_NUMBER_SUFFIX:"SOCE_CCS_1", TEST_FIELD_SUFFIX: "SOCE_CCS", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "CLASSROOM_COMMUNITY_SAFETY"}

    //,{TEST_NUMBER_SUFFIX:"SOCE_CCS", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "CLASSROOM_COMMUNITY_SAFETY"}
    ,{TEST_NUMBER_SUFFIX:"SOCE_CCS2", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL_SPA_V2", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "CLASSROOM_COMMUNITY_SAFETY"}
	,{TEST_NUMBER_SUFFIX:"SOCE_EBR", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "EMOTION_BEHAVIOR"}
	,{TEST_NUMBER_SUFFIX:"SOCE_EBR_1", TEST_FIELD_SUFFIX: "SOCE_EBR", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "EMOTION_BEHAVIOR"}

	//,{TEST_NUMBER_SUFFIX:"SOCE_EBR", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "EMOTION_BEHAVIOR"}
	,{TEST_NUMBER_SUFFIX:"SOCE_EBR2", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL_SPA_V2", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "EMOTION_BEHAVIOR"}
	,{TEST_NUMBER_SUFFIX:"SOCE_SCR", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "SELF_CARE"}
	,{TEST_NUMBER_SUFFIX:"SOCE_SCR_1", TEST_FIELD_SUFFIX: "SOCE_SCR", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "SELF_CARE"}

	//,{TEST_NUMBER_SUFFIX:"SOCE_SCR", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "SELF_CARE"}
	,{TEST_NUMBER_SUFFIX:"SOCE_SCR2", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL_SPA_V2", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "SELF_CARE"}
	,{TEST_NUMBER_SUFFIX:"SOCE_AL", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "APPROACHES_TO_LEARNING"}
	,{TEST_NUMBER_SUFFIX:"SOCE_AL_1", TEST_FIELD_SUFFIX: "SOCE_AL", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "APPROACHES_TO_LEARNING"}

	,{TEST_NUMBER_SUFFIX:"SOCE_AL", TEST_FIELD_SUFFIX: "SOCIAL-EMOTIONAL", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "APPROACHES_TO_LEARNING"}

	,{TEST_NUMBER_SUFFIX:"EW", TEST_FIELD_SUFFIX: "EARLY_WRITING", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "EWC"}
    ,{TEST_NUMBER_SUFFIX:"EW", TEST_FIELD_SUFFIX: "EARLY_WRITING", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "EWC"}
    ,{TEST_NUMBER_SUFFIX:"EW", TEST_FIELD_SUFFIX: "EARLY_WRITING", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"EW", TEST_FIELD_SUFFIX: "EARLY_WRITING", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}

	,{TEST_NUMBER_SUFFIX:"ATLE", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP", LANGUAGE:"ENG", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"ATLE", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP", LANGUAGE:"SPA", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"ATLE_IC", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "INITIATIVE_CURIOSITY"}
	,{TEST_NUMBER_SUFFIX:"ATLE_IC2", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP_V2", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "INITIATIVE_CURIOSITY"}
    ,{TEST_NUMBER_SUFFIX:"ATLE_IC_1", TEST_FIELD_SUFFIX: "ATLE_IC", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "INITIATIVE_CURIOSITY"}
    ,{TEST_NUMBER_SUFFIX:"ATLE_IC", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "INITIATIVE_CURIOSITY_V1"}
    ,{TEST_NUMBER_SUFFIX:"ATLE_IC2", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP_V2", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "INITIATIVE_CURIOSITY_V1"}

	,{TEST_NUMBER_SUFFIX:"ATLE_IC", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "INITIATIVE_CURIOSITY"}
	,{TEST_NUMBER_SUFFIX:"ATLE_IC2", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP_V2", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "INITIATIVE_CURIOSITY"}
    ,{TEST_NUMBER_SUFFIX:"ATLE_FLEX", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "FLEXIBILITY"}
    ,{TEST_NUMBER_SUFFIX:"ATLE_FLEX2", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP_V2", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "FLEXIBILITY"}
    ,{TEST_NUMBER_SUFFIX:"ATLE_FLEX", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "FLEXIBILITY_V1"}
    ,{TEST_NUMBER_SUFFIX:"ATLE_FLEX2", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP_V2", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "FLEXIBILITY_V1"}
	,{TEST_NUMBER_SUFFIX:"ATLE_FLEX_1", TEST_FIELD_SUFFIX: "ATLE_FLEX", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "FLEXIBILITY"}

	,{TEST_NUMBER_SUFFIX:"ATLE_FLEX", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "FLEXIBILITY"}
	,{TEST_NUMBER_SUFFIX:"ATLE_FLEX2", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP_V2", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "FLEXIBILITY"}
    ,{TEST_NUMBER_SUFFIX:"ATLE_ACDC", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "CREATIVITY_DRAMATIC_PLAY"}
    ,{TEST_NUMBER_SUFFIX:"ATLE_ACDC2", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP_V2", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "CREATIVITY_DRAMATIC_PLAY"}
    ,{TEST_NUMBER_SUFFIX:"ATLE_ACDC", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "CREATIVITY_DRAMATIC_PLAY_V1"}
    ,{TEST_NUMBER_SUFFIX:"ATLE_ACDC2", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP_V2", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "CREATIVITY_DRAMATIC_PLAY_V1"}
	,{TEST_NUMBER_SUFFIX:"ATLE_ACDC_1", TEST_FIELD_SUFFIX: "ATLE_ACDC", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "CREATIVITY_DRAMATIC_PLAY"}

	,{TEST_NUMBER_SUFFIX:"ATLE_ACDC", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "CREATIVITY_DRAMATIC_PLAY"}
	,{TEST_NUMBER_SUFFIX:"ATLE_ACDC2", TEST_FIELD_SUFFIX: "APPROACHES_TO_LEARNING_EXP_V2", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "CREATIVITY_DRAMATIC_PLAY"}

	,{TEST_NUMBER_SUFFIX:"PDH", TEST_FIELD_SUFFIX: "PHYSICAL_DEV_HEALTH", LANGUAGE:"ENG", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"PDH", TEST_FIELD_SUFFIX: "PDH", LANGUAGE:"ENG", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}

	,{TEST_NUMBER_SUFFIX:"PDH", TEST_FIELD_SUFFIX: "PHYSICAL_DEV_HEALTH", LANGUAGE:"SPA", MAP_FUNCTION: mapOverallScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"PDH_FVM", TEST_FIELD_SUFFIX: "PHYSICAL_DEV_HEALTH", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "FINE_VISUAL_MOTOR"}
	,{TEST_NUMBER_SUFFIX:"PDH_FVM", TEST_FIELD_SUFFIX: "PDH_FVM", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "FINE_VISUAL_MOTOR"}

	,{TEST_NUMBER_SUFFIX:"PDH_FVM", TEST_FIELD_SUFFIX: "PHYSICAL_DEV_HEALTH", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "FINE_VISUAL_MOTOR"}
	,{TEST_NUMBER_SUFFIX:"PDH_GM", TEST_FIELD_SUFFIX: "PHYSICAL_DEV_HEALTH", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "GROSS_MOTOR"}
	,{TEST_NUMBER_SUFFIX:"PDH_GM", TEST_FIELD_SUFFIX: "PDH_GM", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "GROSS_MOTOR"}

	,{TEST_NUMBER_SUFFIX:"PDH_GM", TEST_FIELD_SUFFIX: "PHYSICAL_DEV_HEALTH", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "GROSS_MOTOR"}
	,{TEST_NUMBER_SUFFIX:"PDH_HS", TEST_FIELD_SUFFIX: "PHYSICAL_DEV_HEALTH", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "HEALTH"}
	,{TEST_NUMBER_SUFFIX:"PDH_HS", TEST_FIELD_SUFFIX: "PDH_HS", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "HEALTH"}

	,{TEST_NUMBER_SUFFIX:"PDH_HS", TEST_FIELD_SUFFIX: "PHYSICAL_DEV_HEALTH", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "HEALTH"}

	,{TEST_NUMBER_SUFFIX:"LC", TEST_FIELD_SUFFIX: "LANGUAGE_COMMUNICATION", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "LC"}
    ,{TEST_NUMBER_SUFFIX:"LC", TEST_FIELD_SUFFIX: "LANGUAGE_COMMUNICATION_2016", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "LC"}
    ,{TEST_NUMBER_SUFFIX:"LC", TEST_FIELD_SUFFIX: "LANGUAGE_COMMUNICATION_2016", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"LC", TEST_FIELD_SUFFIX: "LANGUAGE_COMMUNICATION_2016", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"LC", TEST_FIELD_SUFFIX: "LANGUAGE_COMMUNICATION_2016", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "LC"}
	,{TEST_NUMBER_SUFFIX:"MTR", TEST_FIELD_SUFFIX: "MOTIVATION_TO_READ", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "MR"}
    ,{TEST_NUMBER_SUFFIX:"MTR", TEST_FIELD_SUFFIX: "MOTIVATION_TO_READ_2016", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: "MR"}
    ,{TEST_NUMBER_SUFFIX:"MTR", TEST_FIELD_SUFFIX: "MOTIVATION_TO_READ_2016", LANGUAGE:"ENG", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"MTR", TEST_FIELD_SUFFIX: "MOTIVATION_TO_READ_2016", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"MTR", TEST_FIELD_SUFFIX: "MOTIVATION_TO_READ_2016", LANGUAGE:"SPA", MAP_FUNCTION: mapScaledScore, SUBITEM: "MR"}

	//TXKEA
	,{TEST_NUMBER_SUFFIX:"T_LCP", TEST_FIELD_SUFFIX: "LANGUAGE_COMPOSITE", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"T_LCP", TEST_FIELD_SUFFIX: "LANGUAGE_COMPOSITE", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

	,{TEST_NUMBER_SUFFIX:"T_LRC", TEST_FIELD_SUFFIX: "LITERACY-READING_COMPOSITE", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
	,{TEST_NUMBER_SUFFIX:"T_LRC", TEST_FIELD_SUFFIX: "LITERACY-READING_COMPOSITE", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

	,{TEST_NUMBER_SUFFIX:"T_LSC", TEST_FIELD_SUFFIX: "LISTENING_COMP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_LSC", TEST_FIELD_SUFFIX: "LISTENING_COMP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_LSC_LSC1", TEST_FIELD_SUFFIX: "LISTENING_COMP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMP_1"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_LSC1", TEST_FIELD_SUFFIX: "LISTENING_COMP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMP_1"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_LSC2_R", TEST_FIELD_SUFFIX: "LISTENING_COMP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMP_2_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_LSC2_R", TEST_FIELD_SUFFIX: "LISTENING_COMP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMP_2_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_LSC2_E", TEST_FIELD_SUFFIX: "LISTENING_COMP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMP_2_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_LSC2_E", TEST_FIELD_SUFFIX: "LISTENING_COMP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMP_2_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_LSC3_R", TEST_FIELD_SUFFIX: "LISTENING_COMP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMPREHENSION_3_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_LSC3_R", TEST_FIELD_SUFFIX: "LISTENING_COMP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMPREHENSION_3_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_LSC3_E", TEST_FIELD_SUFFIX: "LISTENING_COMP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMPREHENSION_3_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_LSC3_E", TEST_FIELD_SUFFIX: "LISTENING_COMP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMPREHENSION_3_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_1", TEST_FIELD_SUFFIX: "LISTENING_COMP_1", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_1", TEST_FIELD_SUFFIX: "LISTENING_COMP_1", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_LSC_GR", TEST_FIELD_SUFFIX: "LISTENING_COMP_GROUP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_LSC_GR", TEST_FIELD_SUFFIX: "LISTENING_COMP_GROUP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_LSC_GR_R", TEST_FIELD_SUFFIX: "LISTENING_COMP_GROUP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMPREHENSION_3_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_GR_R", TEST_FIELD_SUFFIX: "LISTENING_COMP_GROUP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMPREHENSION_3_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_GR_E", TEST_FIELD_SUFFIX: "LISTENING_COMP_GROUP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMPREHENSION_3_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LSC_GR_E", TEST_FIELD_SUFFIX: "LISTENING_COMP_GROUP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LISTENING_COMPREHENSION_3_EXPRESSIVE"}

    ,{TEST_NUMBER_SUFFIX:"T_VC", TEST_FIELD_SUFFIX: "VOCABULARY", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_VC", TEST_FIELD_SUFFIX: "VOCABULARY", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_VC_1", TEST_FIELD_SUFFIX: "VOCABULARY_1", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_VC_1", TEST_FIELD_SUFFIX: "VOCABULARY_1", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_VC_2", TEST_FIELD_SUFFIX: "VOCABULARY_2", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_VC_2", TEST_FIELD_SUFFIX: "VOCABULARY_2", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_VC_3", TEST_FIELD_SUFFIX: "VOCABULARY_3", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_VC_3", TEST_FIELD_SUFFIX: "VOCABULARY_3", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_VC_VC_1", TEST_FIELD_SUFFIX: "VOCABULARY", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "VOCABULARY_1"}
    ,{TEST_NUMBER_SUFFIX:"T_VC_VC_1", TEST_FIELD_SUFFIX: "VOCABULARY", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "VOCABULARY_1"}
    ,{TEST_NUMBER_SUFFIX:"T_VC_VC_2", TEST_FIELD_SUFFIX: "VOCABULARY", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "VOCABULARY_2"}
    ,{TEST_NUMBER_SUFFIX:"T_VC_VC_2", TEST_FIELD_SUFFIX: "VOCABULARY", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "VOCABULARY_2"}
    ,{TEST_NUMBER_SUFFIX:"T_VC_VC_3", TEST_FIELD_SUFFIX: "VOCABULARY", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "VOCABULARY_3"}
    ,{TEST_NUMBER_SUFFIX:"T_VC_VC_3", TEST_FIELD_SUFFIX: "VOCABULARY", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "VOCABULARY_3"}

    ,{TEST_NUMBER_SUFFIX:"T_BL", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_BL", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_BL_1", TEST_FIELD_SUFFIX: "BLENDING_1", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_BL_1", TEST_FIELD_SUFFIX: "BLENDING_1", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL1", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_1"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL1", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_1"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL2", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_2"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL2", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_2"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL2_R", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_2_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL2_R", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_2_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL2_E", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_2_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL2_E", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_2_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL3", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_3"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL3", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_3"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL3_R", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_3_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL3_R", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_3_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL3_E", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_3_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_BL3_E", TEST_FIELD_SUFFIX: "BLENDING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_3_EXPRESSIVE"}

    ,{TEST_NUMBER_SUFFIX:"T_BL_GR", TEST_FIELD_SUFFIX: "BLENDING_GROUP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_BL_GR", TEST_FIELD_SUFFIX: "BLENDING_GROUP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_BL_GR_R3", TEST_FIELD_SUFFIX: "BLENDING_GROUP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_3_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_GR_R3", TEST_FIELD_SUFFIX: "BLENDING_GROUP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_3_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_GR_E2", TEST_FIELD_SUFFIX: "BLENDING_GROUP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_2_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_GR_E2", TEST_FIELD_SUFFIX: "BLENDING_GROUP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_2_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_GR_E3", TEST_FIELD_SUFFIX: "BLENDING_GROUP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_3_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_BL_GR_E3", TEST_FIELD_SUFFIX: "BLENDING_GROUP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "BLENDING_3_EXPRESSIVE"}

    ,{TEST_NUMBER_SUFFIX:"T_LS", TEST_FIELD_SUFFIX: "LETTER_SOUNDS", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_LS", TEST_FIELD_SUFFIX: "LETTER_SOUNDS", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_LS_1", TEST_FIELD_SUFFIX: "LETTER_SOUNDS_1", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_LS_1", TEST_FIELD_SUFFIX: "LETTER_SOUNDS_1", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_LS_LS1", TEST_FIELD_SUFFIX: "LETTER_SOUNDS", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_1"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_LS1", TEST_FIELD_SUFFIX: "LETTER_SOUNDS", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_1"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_LS2_R", TEST_FIELD_SUFFIX: "LETTER_SOUNDS", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_2_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_LS2_R", TEST_FIELD_SUFFIX: "LETTER_SOUNDS", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_2_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_LS2_E", TEST_FIELD_SUFFIX: "LETTER_SOUNDS", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_2_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_LS2_E", TEST_FIELD_SUFFIX: "LETTER_SOUNDS", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_2_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_LS3_R", TEST_FIELD_SUFFIX: "LETTER_SOUNDS", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_3_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_LS3_R", TEST_FIELD_SUFFIX: "LETTER_SOUNDS", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_3_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_LS3_E", TEST_FIELD_SUFFIX: "LETTER_SOUNDS", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_3_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_LS3_E", TEST_FIELD_SUFFIX: "LETTER_SOUNDS", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_3_EXPRESSIVE"}

    ,{TEST_NUMBER_SUFFIX:"T_LS_GR", TEST_FIELD_SUFFIX: "LETTER_SOUNDS_GROUP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_LS_GR", TEST_FIELD_SUFFIX: "LETTER_SOUNDS_GROUP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_LS_GR_R2", TEST_FIELD_SUFFIX: "LETTER_SOUNDS_GROUP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_2_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_GR_R2", TEST_FIELD_SUFFIX: "LETTER_SOUNDS_GROUP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_2_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_GR_R3", TEST_FIELD_SUFFIX: "LETTER_SOUNDS_GROUP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_3_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_GR_R3", TEST_FIELD_SUFFIX: "LETTER_SOUNDS_GROUP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_3_RECEPTIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_GR_E2", TEST_FIELD_SUFFIX: "LETTER_SOUNDS_GROUP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_2_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_GR_E2", TEST_FIELD_SUFFIX: "LETTER_SOUNDS_GROUP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_2_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_GR_E3", TEST_FIELD_SUFFIX: "LETTER_SOUNDS_GROUP", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_3_EXPRESSIVE"}
    ,{TEST_NUMBER_SUFFIX:"T_LS_GR_E3", TEST_FIELD_SUFFIX: "LETTER_SOUNDS_GROUP", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_SOUNDS_3_EXPRESSIVE"}

    ,{TEST_NUMBER_SUFFIX:"T_LN", TEST_FIELD_SUFFIX: "LETTER_NAMES", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_LN", TEST_FIELD_SUFFIX: "LETTER_NAMES", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_LN_W2", TEST_FIELD_SUFFIX: "LETTER_NAMES_WAVE_2", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_LN_W3", TEST_FIELD_SUFFIX: "LETTER_NAMES_WAVE_3", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_LN_1", TEST_FIELD_SUFFIX: "LETTER_NAMES_1", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_LN_1_SP", TEST_FIELD_SUFFIX: "LETTER_NAMES_1", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_LN_LN_1", TEST_FIELD_SUFFIX: "LETTER_NAMES", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_NAMES_1"}
    ,{TEST_NUMBER_SUFFIX:"T_LN_LN_1", TEST_FIELD_SUFFIX: "LETTER_NAMES", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_NAMES_1"}
    ,{TEST_NUMBER_SUFFIX:"T_LN_LN_2", TEST_FIELD_SUFFIX: "LETTER_NAMES", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_NAMES_2"}
    ,{TEST_NUMBER_SUFFIX:"T_LN_LN_2", TEST_FIELD_SUFFIX: "LETTER_NAMES", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_NAMES_2"}
    ,{TEST_NUMBER_SUFFIX:"T_LN_LN_3", TEST_FIELD_SUFFIX: "LETTER_NAMES", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_NAMES_3"}
    ,{TEST_NUMBER_SUFFIX:"T_LN_LN_3", TEST_FIELD_SUFFIX: "LETTER_NAMES", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "LETTER_NAMES_3"}

    ,{TEST_NUMBER_SUFFIX:"T_RDN", TEST_FIELD_SUFFIX: "READINESS", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_RDN", TEST_FIELD_SUFFIX: "READINESS", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_SPL", TEST_FIELD_SUFFIX: "SPELLING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_SPL", TEST_FIELD_SUFFIX: "SPELLING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_SPL_SPL1", TEST_FIELD_SUFFIX: "SPELLING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "SPELLING_1"}
    ,{TEST_NUMBER_SUFFIX:"T_SPL_SPL1", TEST_FIELD_SUFFIX: "SPELLING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "SPELLING_1"}
    ,{TEST_NUMBER_SUFFIX:"T_SPL_SPL2", TEST_FIELD_SUFFIX: "SPELLING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "SPELLING_2"}
    ,{TEST_NUMBER_SUFFIX:"T_SPL_SPL2", TEST_FIELD_SUFFIX: "SPELLING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "SPELLING_2"}
    ,{TEST_NUMBER_SUFFIX:"T_SPL_SPL3", TEST_FIELD_SUFFIX: "SPELLING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "SPELLING_3"}
    ,{TEST_NUMBER_SUFFIX:"T_SPL_SPL3", TEST_FIELD_SUFFIX: "SPELLING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "SPELLING_3"}
    ,{TEST_NUMBER_SUFFIX:"T_SPL_2", TEST_FIELD_SUFFIX: "SPELLING_2", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_SPL_2", TEST_FIELD_SUFFIX: "SPELLING_2", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_SPL_3", TEST_FIELD_SUFFIX: "SPELLING_3", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_SPL_3", TEST_FIELD_SUFFIX: "SPELLING_3", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_SPL_1", TEST_FIELD_SUFFIX: "SPELLING_1", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_SPL_1", TEST_FIELD_SUFFIX: "SPELLING_1", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}


    ,{TEST_NUMBER_SUFFIX:"T_MA", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_MA", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_MA1", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "MATH_PART_1"}
    ,{TEST_NUMBER_SUFFIX:"T_MA1", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "MATH_PART_1"}
    ,{TEST_NUMBER_SUFFIX:"T_MA2", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "MATH_PART_2"}
    ,{TEST_NUMBER_SUFFIX:"T_MA2", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "MATH_PART_2"}
    ,{TEST_NUMBER_SUFFIX:"T_MA1_W2", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "MATH_PART_1_W2"}
    ,{TEST_NUMBER_SUFFIX:"T_MA1_W2", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "MATH_PART_1_W2"}
    ,{TEST_NUMBER_SUFFIX:"T_MA1_W3", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "MATH_PART_1_W3"}
    ,{TEST_NUMBER_SUFFIX:"T_MA1_W3", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "MATH_PART_1_W3"}
    ,{TEST_NUMBER_SUFFIX:"T_MA2_W2", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "MATH_PART_2_W2"}
    ,{TEST_NUMBER_SUFFIX:"T_MA2_W2", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "MATH_PART_2_W2"}
    ,{TEST_NUMBER_SUFFIX:"T_MA2_W3", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "MATH_PART_2_W3"}
    ,{TEST_NUMBER_SUFFIX:"T_MA2_W3", TEST_FIELD_SUFFIX: "MATH", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "MATH_PART_2_W3"}

    ,{TEST_NUMBER_SUFFIX:"T_SCI", TEST_FIELD_SUFFIX: "SCIENCE", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_SCI", TEST_FIELD_SUFFIX: "SCIENCE", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaOverallScore, SUBITEM: ""}//TOTAL
    ,{TEST_NUMBER_SUFFIX:"T_SCI_SCI1", TEST_FIELD_SUFFIX: "SCIENCE", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "SCIENCE_1"}
    ,{TEST_NUMBER_SUFFIX:"T_SCI_SCI1", TEST_FIELD_SUFFIX: "SCIENCE", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "SCIENCE_1"}
    ,{TEST_NUMBER_SUFFIX:"T_SCI_SCI2", TEST_FIELD_SUFFIX: "SCIENCE", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "SCIENCE_2"}
    ,{TEST_NUMBER_SUFFIX:"T_SCI_SCI2", TEST_FIELD_SUFFIX: "SCIENCE", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "SCIENCE_2"}
    ,{TEST_NUMBER_SUFFIX:"T_SCI_SCI3", TEST_FIELD_SUFFIX: "SCIENCE", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "SCIENCE_3"}
    ,{TEST_NUMBER_SUFFIX:"T_SCI_SCI3", TEST_FIELD_SUFFIX: "SCIENCE", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "SCIENCE_3"}
    ,{TEST_NUMBER_SUFFIX:"T_SCI_3", TEST_FIELD_SUFFIX: "SCIENCE_3", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_SCI_3", TEST_FIELD_SUFFIX: "SCIENCE_3", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_WM", TEST_FIELD_SUFFIX: "WORKING_MEMORY", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_WM", TEST_FIELD_SUFFIX: "WORKING_MEMORY", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_INH", TEST_FIELD_SUFFIX: "INHIBITION", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_INH", TEST_FIELD_SUFFIX: "INHIBITION", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_AT", TEST_FIELD_SUFFIX: "ATTENTION", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_AT", TEST_FIELD_SUFFIX: "ATTENTION", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_SOCE", TEST_FIELD_SUFFIX: "SOCIAL_EMOTIONAL", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_SOCE", TEST_FIELD_SUFFIX: "SOCIAL_EMOTIONAL", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_EM", TEST_FIELD_SUFFIX: "EMOTIONAL_MANAGEMENT", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_EM", TEST_FIELD_SUFFIX: "EMOTIONAL_MANAGEMENT", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_ACM", TEST_FIELD_SUFFIX: "ACADEMIC_MOTOR", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_ACM", TEST_FIELD_SUFFIX: "ACADEMIC_MOTOR", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_DEC", TEST_FIELD_SUFFIX: "DECODING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_DEC", TEST_FIELD_SUFFIX: "DECODING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_DEC_DEC1", TEST_FIELD_SUFFIX: "DECODING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "DECODING_1"}
    ,{TEST_NUMBER_SUFFIX:"T_DEC_DEC1", TEST_FIELD_SUFFIX: "DECODING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "DECODING_1"}
    ,{TEST_NUMBER_SUFFIX:"T_DEC_DEC2", TEST_FIELD_SUFFIX: "DECODING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "DECODING_2"}
    ,{TEST_NUMBER_SUFFIX:"T_DEC_DEC2", TEST_FIELD_SUFFIX: "DECODING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "DECODING_2"}
    ,{TEST_NUMBER_SUFFIX:"T_DEC_DEC3", TEST_FIELD_SUFFIX: "DECODING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "DECODING_3"}
    ,{TEST_NUMBER_SUFFIX:"T_DEC_DEC3", TEST_FIELD_SUFFIX: "DECODING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: "DECODING_3"}
    ,{TEST_NUMBER_SUFFIX:"T_DEC_2", TEST_FIELD_SUFFIX: "DECODING_2", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_DEC_2", TEST_FIELD_SUFFIX: "DECODING_2", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_DEC_3", TEST_FIELD_SUFFIX: "DECODING_3", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_DEC_3", TEST_FIELD_SUFFIX: "DECODING_3", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_KLS", TEST_FIELD_SUFFIX: "LITERACY_SCREENING", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_KLS", TEST_FIELD_SUFFIX: "LITERACY_SCREENING", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_KDS", TEST_FIELD_SUFFIX: "DYSLEXIA_SCREENER", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_KDS", TEST_FIELD_SUFFIX: "DYSLEXIA_SCREENER", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_KDC", TEST_FIELD_SUFFIX: "DYSLEXIA_CHECKLIST", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_KDC", TEST_FIELD_SUFFIX: "DYSLEXIA_CHECKLIST", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"T_SYL", TEST_FIELD_SUFFIX: "SYLLABICATION", LANGUAGE:"ENG", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}
    ,{TEST_NUMBER_SUFFIX:"T_SYL", TEST_FIELD_SUFFIX: "SYLLABICATION", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore, SUBITEM: ""}

    ,{TEST_NUMBER_SUFFIX:"TXKEA", TEST_FIELD_SUFFIX: "SYLLABICATION", LANGUAGE:"SP", MAP_FUNCTION: mapTxkeaScore},

    // Phonological
    { TEST_NUMBER_SUFFIX: "PA_V2", TEST_FIELD_SUFFIX: "PA_V2", LANGUAGE: "ENG", MAP_FUNCTION: mapPhonologicalScores, SUBITEM: "" },
    { TEST_NUMBER_SUFFIX: "PA_V2", TEST_FIELD_SUFFIX: "PA_V2", LANGUAGE: "SPA", MAP_FUNCTION: mapPhonologicalScores, SUBITEM: "" },
    { TEST_NUMBER_SUFFIX: "PA_V2_SYL", TEST_FIELD_SUFFIX: "PA_V2_SYLLABICATION_V2", LANGUAGE: "ENG", MAP_FUNCTION: mapPhonologicalScores, SUBITEM: "SYLLABICATION" },
    { TEST_NUMBER_SUFFIX: "PA_V2_SYL", TEST_FIELD_SUFFIX: "PA_V2_SYLLABICATION_V2", LANGUAGE: "SPA", MAP_FUNCTION: mapPhonologicalScores, SUBITEM: "SYLLABICATION" },
    { TEST_NUMBER_SUFFIX: "PA_V2_ONR", TEST_FIELD_SUFFIX: "PA_V2_ONSET-RIME_V2", LANGUAGE: "ENG", MAP_FUNCTION: mapPhonologicalScores, SUBITEM: "ONSET-RIME" },
    { TEST_NUMBER_SUFFIX: "PA_V2_ONR", TEST_FIELD_SUFFIX: "PA_V2_ONSET-RIME_V2", LANGUAGE: "SPA", MAP_FUNCTION: mapPhonologicalScores, SUBITEM: "ONSET-RIME" },
    { TEST_NUMBER_SUFFIX: "PA_V2_ALL", TEST_FIELD_SUFFIX: "PA_V2_ALLITERATION_V2", LANGUAGE: "ENG", MAP_FUNCTION: mapPhonologicalScores, SUBITEM: "ALLITERATION" },
    { TEST_NUMBER_SUFFIX: "PA_V2_ALL", TEST_FIELD_SUFFIX: "PA_V2_ALLITERATION_V2", LANGUAGE: "SPA", MAP_FUNCTION: mapPhonologicalScores, SUBITEM: "ALLITERATION" },
    { TEST_NUMBER_SUFFIX: "PA_V2_RHY", TEST_FIELD_SUFFIX: "PA_V2_RHYMING_I_V2", LANGUAGE: "ENG", MAP_FUNCTION: mapPhonologicalScores, SUBITEM: "RHYMING_I" },
    { TEST_NUMBER_SUFFIX: "PA_V2_RHY", TEST_FIELD_SUFFIX: "PA_V2_RHYMING_I_V2", LANGUAGE: "SPA", MAP_FUNCTION: mapPhonologicalScores, SUBITEM: "RHYMING_I" }

    ];

    /***************************************************************************
     Assessment-specific decodes
     ***************************************************************************/
     //TODO add any additional decodes
    var gradeDecode = {
        "KG": "KG",
        "Pre-k" : "PK", //Prekindergarten
        "PK" : "PK",
        "EE" : "EE"
       ,"" : null
       ,null : null
    };

      var decodePeriod = {
        "1" : "Wave1"
       ,"2" : "Wave2"
       ,"3" : "Wave3"
       ,"Wave1" : "Wave1"
       ,"Wave2" : "Wave2"
       ,"Wave3" : "Wave3"
       ,"WAVE1" : "Wave1"
       ,"WAVE2" : "Wave2"
       ,"WAVE3" : "Wave3"
       };

    var primaryResultDecode = {
    "On Track" : "On Track"
    ,"On-Track" : "On Track"
    ,"Monitor" : "Monitor"
    ,"Needs Support" : "Needs Support"
    ,"Support" : "Needs Support"
    ,"Out of Range" : "Out Of Range"
    ,"Out Of Range" : "Out Of Range"
    ,"Proficient" : "Proficient"
    ,"Emerging" : "Emerging"
    ,"Developing" : "Developing"
    ,"" : null
    ,null : null
    };
    /***********************************************************************************
     Assessment-specific decode functions
     ***********************************************************************************/

    /***********************************************************************************
     Assessment-specific mapping functions
     ***********************************************************************************/

    /**
     * Maps normalized records for given group of rows.
     *
     * @param signature The java signature of the file
     * @param hierarchy A JSON object containing file hierarchy values
     * @param rows A JSON array of record objects being processed
     * @returns {Array}
     */
    function mapNormalizedRecords(signature, hierarchy, rows) {
        var normalizedRecords = [];
        var row = AppSignatureFieldDetails.getFieldDetailsParser(signature, rows[0]);
        var record = mapNormalizedRecord(signature, hierarchy, row);

        AppUtil.nullSafePush(normalizedRecords, record);

        return normalizedRecords;
    }

    /**
     * Map a normalized record for given row and set of administration metadata.
     *
     * @param signature The java signature of the file
     * @param hierarchy A JSON object containing file hierarchy values
     * @param row A JSON object containing row values being processed
     * @returns {Object}
     */
    function mapNormalizedRecord(signature, hierarchy, row) {
        var record = {};
        var mappingObject = {};

        mappingObject.ADMIN_MAPPINGS = {};
        mappingObject.SCORE_MAPPINGS = [];
        mappingObject.ASSESSMENT_METADATA = {};
        mappingObject.ASSESSMENT_METADATA.TESTS = [];
        mappingObject.ASSESSMENT_METADATA.BENCHMARKS = [];

        //Map normalized admin fields
        record = mapNormalizedAdminFields(signature, hierarchy, row);

        //Map non-normalized admin fields
        mappingObject.ADMIN_MAPPINGS = mapAdditionalAdminFields(row);

        //Map score fields for each expected score mapping
        scoresToMap.forEach(function(testMetadata) {
            try {
                var score = (testMetadata.MAP_FUNCTION)(row, testMetadata);

                AppUtil.nullSafePush(mappingObject.SCORE_MAPPINGS, score);
            } catch(exception) {
                AssessmentLoader.audits.push(AppAudit.writeRejectRecord(hierarchy.SOURCE_FILE.getFilePath(), "HIGH", row.getRawField("LINEAGE_LINE"), "Score mapping error: ${exception}", JSON.stringify(row)));
            }
        });

        // System Fields
        record.ASSESSMENT_JSON_MAPPINGS = JSON.stringify(mappingObject);
        record.LINEAGE_SOURCE = _thisLineageSource;
        record.LINEAGE_SIGNATURE = signature.getFormat().getFormatName();
        record.LINEAGE_FILE = row.getRawField("LINEAGE_FILE");
        record.LINEAGE_LINE = row.getRawField("LINEAGE_LINE");

        return record;
    }

    /***********************************************************************************
     Assessment-specific administration functions
     ***********************************************************************************/

    /**
     * Maps normalized administration fields based on a given set of administration metadata.
     *
     * @param signature The java signature of the file
     * @param hierarchy A JSON object containing file hierarchy values
     * @param row A JSON object containing row values being processed
     */
    function mapNormalizedAdminFields(signature, hierarchy, row) {
        var record = {};
        var normalizedFileFields = AppUtil.getStandardNormalizedFileFields();
        var birthDateStr = _util.coalesce(row.getField("STUDENT_DOB"), "");
        var birthDateObject = {
            RAW_DATE: null
            , MONTH: null
            , DAY: null
            , YEAR: null
            , STANDARD_DATE: null
        };

        try {
            if (birthDateStr.length >= 9 && birthDateStr .indexOf('-')!== -1) {
                birthDateObject = AppUtil.getDateObjByPattern(birthDateStr, "dd-MM-yyyy");

            } else if (birthDateStr.length >= 9 && birthDateStr .indexOf('/')!== -1) {
                birthDateObject = AppUtil.getDateObjByPattern(birthDateStr, "MM/dd/yyyy");
            } else {
                birthDateObject;
            }
        } catch (exception) {
            AssessmentLoader.audits.push(AppAudit.writeRejectRecord(hierarchy.SOURCE_FILE.getFilePath(), "WARNING", row.getRawField("LINEAGE_LINE"), "Error parsing test date string: ${exception}", JSON.stringify(row.getSourceRow())));
        }

        var schoolYear = hierarchy.SCHOOL_YEAR;

        normalizedFileFields.forEach(function (field) {
            switch(field) {
                case "ASSESSMENT_ADMIN_KEY":
                    record.ASSESSMENT_ADMIN_KEY = generateAssessmentAdminKey(signature, hierarchy, row);
                    break;
                case "SYS_PARTITION_VALUE":
                    record.SYS_PARTITION_VALUE = _util.coalesce(AssessmentLoader.config.SYS_PARTITION_VALUE, AssessmentLoader.config.TENANT_CODE);
                    break;
                case "TENANT_CODE":
                    record.TENANT_CODE = AssessmentLoader.config.TENANT_CODE;
                    break;
                case "DISTRICT_CODE":
                    record.DISTRICT_CODE = AssessmentLoader.config.DISTRICT_CODE;
                    break;
                case "SCHOOL_YEAR":
                    record.SCHOOL_YEAR = schoolYear;
                    break;
                case "REPORTING_PERIOD":
                    record.REPORTING_PERIOD = decodePeriod[row.getField("WAVE") ? row.getField("WAVE").replace(/\s+/g, "") : null];
                    break;
                case "ASSESSMENT_VENDOR":
                    record.ASSESSMENT_VENDOR = hierarchy.ASSESSMENT_VENDOR;
                    break;
                case "ASSESSMENT_PRODUCT":
                    record.ASSESSMENT_PRODUCT = hierarchy.ASSESSMENT_PRODUCT;
                    break;
                case "TEST_ADMIN_DATE":
                    record.TEST_ADMIN_DATE = formatTestDate(row, schoolYear);
                    break;
                //Student Information
                case "STUDENT_LOCAL_ID":
                    record.STUDENT_LOCAL_ID = _util.coalesce(row.getField("LOCAL_STUDENT_ID"));
                    break;
                case "STUDENT_STATE_ID":
                    record.STUDENT_STATE_ID = _util.coalesce(
                        row.getField("TSDS_STUDENT_ID")
                        , row.getField("STUDENT_ENGAGE_ID")
                        , row.getField("STUDENT_ID")
                        , row.getField("STUDENT_STATE_ID")
                    );
                    break;
                case "STUDENT_VENDOR_ID":
                    record.STUDENT_VENDOR_ID = _util.coalesce(
                        row.getField("TSDS_STUDENT_ID")
                        , row.getField("STUDENT_ENGAGE_ID")
                        ,row.getField("STUDENT_ID")
                    );
                    break;
                case "STUDENT_FIRST_NAME":
                    record.STUDENT_FIRST_NAME = row.getField('STUDENT_FIRST_NAME');
                    break;
                case "STUDENT_LAST_NAME":
                    record.STUDENT_LAST_NAME = row.getField('STUDENT_LAST_NAME');
                    break;
                case "STUDENT_MIDDLE_NAME":
                    record.STUDENT_MIDDLE_NAME= row.getField('STUDENT_MIDDLE_NAME');
                    break;
                case "STUDENT_GENDER_CODE":
                    record.STUDENT_GENDER_CODE = _util.trim(row.getField("STUDENT_GENDER")+"-").substring(0,1);
                    break;
                case "STUDENT_GRADE_CODE":
                    record.STUDENT_GRADE_CODE = gradeDecode[_util.coalesce(row.getField('STUDENT_GRADE_LEVEL'),row.getField('CLASS_LEVEL'))];
                    break;
                case "STUDENT_DOB_MONTH":
                    record.STUDENT_DOB_MONTH = _util.coalesce(birthDateObject.MONTH, null);
                    break;
                case "STUDENT_DOB_DAY":
                    record.STUDENT_DOB_DAY = _util.coalesce(birthDateObject.DAY, null);
                    break;
                case "STUDENT_DOB_YEAR":
                    record.STUDENT_DOB_YEAR = _util.coalesce(birthDateObject.YEAR, null);
                    break;

                //School Information
                case "SCHOOL_VENDOR_ID":
                    record.SCHOOL_VENDOR_ID = _util.coalesce(row.getField("SCHOOL_NUMBER"), row.getField("SCHOOL_ID"), row.getField("SCHOOL_NAME"));
                    break;
                case "SCHOOL_LOCAL_ID":
                     record.SCHOOL_LOCAL_ID = _util.coalesce(row.getField("SCHOOL_NUMBER"));
                     break;
                case "SCHOOL_STATE_ID":
                     record.SCHOOL_STATE_ID = _util.coalesce(row.getField("SCHOOL_NUMBER"));
                     break;
                case "SCHOOL_NAME":
                    record.SCHOOL_NAME = row.getField("SCHOOL_NAME");
                    break;
                default:
                    record[field] = row.getField(field);
                    break;
            }
        });

        return record;
    }

    /**
     * Maps additional administration fields based on a given set of administration metadata.
     *
     * @param row A JSON object containing row values being processed
     * @returns {{}}
     */
    function mapAdditionalAdminFields(row) {
       var admin = {};

       var CPM_ENG = row.getField("CPM_ADMIN_MODE");
       admin["TEST_INTERVENTION_CODE"] = CPM_ENG;
       var CPM_SPA =  row.getField("CPM_ADMIN_MODE_SP");
       admin["TEST_INTERVENTION_CODE_2"] = CPM_SPA;
       var TXKEA_ENG = row.getField("TXKEA_En_Admin_Mode");
       admin["TEST_INTERVENTION_CODE_3"] = TXKEA_ENG;
       var TXKEA_SPA =  row.getField("TXKEA_Sp_Admin_Mode");
       admin["TEST_INTERVENTION_CODE_4"] = TXKEA_SPA;
       admin.TEST_TEACHER = row.getField("HOMEROOM_TEACHER");
       admin.STATE_STAFF_ID = row.getField("TEACHER_STATE_ID");
       admin.VENDOR_STAFF_ID = row.getField("TEACHER_NUMBER");

       return admin;
    }

 function formatTestDate(row, schoolYear){
 	var period = row.getField("WAVE") ? row.getField("WAVE").replace(/\s+/g, "") : null;
 	var month, day, year;
 	if(decodePeriod[period] === "Wave1"){
 		month = "09";
 		day = "15";
 		year = schoolYear.substring(0, 4);
 	}
 	else if(decodePeriod[period] === "Wave2"){
 		month = "01";
 		day = "15";
 		year = schoolYear.substring(5, 9);
 	}
 	else if(decodePeriod[period] === "Wave3"){
 		month = "05";
 		day = "15";
 		year = schoolYear.substring(5, 9);
 	}
 	return month + "/" + day + "/" + year;
 }

    /**********************************************************************************
     Assessment-specific score functions
     ***********************************************************************************/
    function mapScaledScore(row, testMetadata) {

    var testScoreElement = {};
	var testNumber;
    var language = testMetadata.LANGUAGE;
    var progressResult;
    var scaleScore;
    var enrollmentDate = row.getField("ENROLLMENT_DATE")

    if(language == "SPA"){
        testNumber = "CIR" + testMetadata.TEST_NUMBER_SUFFIX+"_SPA";


        if (testMetadata.SUBITEM === '') {
            scaleScore = _util.coalesce (
                row.getField(testMetadata.TEST_FIELD_SUFFIX+"_"+language+"_V1")
                ,row.getField(testMetadata.TEST_FIELD_SUFFIX+"_"+language+"_V2")
           );
           progressResult = _util.coalesce(
            row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_"+language+"_V1")
            ,row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_"+language+"_V2")
           );
        }
        else if(testMetadata.TEST_FIELD_SUFFIX.toString().indexOf("V2")>-1) {
            scaleScore = _util.coalesce (
                row.getField(testMetadata.TEST_FIELD_SUFFIX+"_"+testMetadata.SUBITEM+"_"+language+"_V1")
               ,row.getField(testMetadata.TEST_FIELD_SUFFIX+"_"+testMetadata.SUBITEM+"_"+language+"_V2")
           );
           progressResult = _util.coalesce(
            row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_"+testMetadata.SUBITEM+"_"+language+"_V1")
           ,row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_"+testMetadata.SUBITEM+"_"+language+"_V2")
           );
        }
        else {
            scaleScore = _util.coalesce (
                row.getField(testMetadata.TEST_FIELD_SUFFIX+"_"+language+"_V1_"+testMetadata.SUBITEM+"_"+language+"_V1")
               ,row.getField(testMetadata.TEST_FIELD_SUFFIX+"_"+language+"_V2_"+testMetadata.SUBITEM+"_"+language+"_V2")
           );
           progressResult = _util.coalesce(
            row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_"+language+"_V1_"+testMetadata.SUBITEM+"_"+language+"_V1")
           ,row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_"+language+"_V2_"+testMetadata.SUBITEM+"_"+language+"_V2")
           );
        }
    } else {
        testNumber = "CIR" + testMetadata.TEST_NUMBER_SUFFIX;
        if (testMetadata.SUBITEM === '') {
            scaleScore = _util.coalesce (
                 row.getField(testMetadata.TEST_FIELD_SUFFIX+"_V1")
                ,row.getField(testMetadata.TEST_FIELD_SUFFIX+"_V2")
           );
            progressResult = _util.coalesce(
                 row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_V1")
                ,row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_V2")
           );
        }
        else if(testMetadata.TEST_FIELD_SUFFIX.toString().indexOf("V2")>-1) {
            scaleScore = _util.coalesce (
                 row.getField(testMetadata.TEST_FIELD_SUFFIX+"_"+testMetadata.SUBITEM+"_V1")
                ,row.getField(testMetadata.TEST_FIELD_SUFFIX+"_"+testMetadata.SUBITEM+"_V2")
           );

            progressResult = _util.coalesce(
                 row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_"+testMetadata.SUBITEM+"_V1")
                ,row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_"+testMetadata.SUBITEM+"_V2")
           );
        }
        else {
            scaleScore = _util.coalesce (
                 row.getField(testMetadata.TEST_FIELD_SUFFIX+"_V1_"+testMetadata.SUBITEM+"_V1")
                ,row.getField(testMetadata.TEST_FIELD_SUFFIX+"_V2_"+testMetadata.SUBITEM+"_V2")
           );

            progressResult = _util.coalesce(
                 row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_V1_"+testMetadata.SUBITEM+"_V1")
                ,row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_V2_"+testMetadata.SUBITEM+"_V2")
           );
        }
    }

	if(
	    (scaleScore === undefined || scaleScore === null || scaleScore == "" || scaleScore == "--")&&
	    (progressResult === undefined || progressResult === null || progressResult == "" || progressResult == "--")
	  ){
    		return null;
    }


    testScoreElement["TEST_NUMBER"] = testNumber;
    testScoreElement["TEST_PRIMARY_RESULT"] = primaryResultDecode[progressResult];

    testScoreElement["TEST_SCORE_TEXT"] = scaleScore;

    if(!isNaN(scaleScore)){
        testScoreElement["TEST_SCORE_VALUE"] = scaleScore;
        testScoreElement["TEST_SCALED_SCORE"] = scaleScore;
        testScoreElement["TEST_RAW_SCORE"] = scaleScore;
    }

    testScoreElement["TEST_CUSTOM_RESULT"] = enrollmentDate;

    return testScoreElement;

    }

     function mapOverallScore(row,testMetadata){
            var testScoreElement = {};
            var testNumber;
            var language = testMetadata.LANGUAGE;
            var scaleScore;
            var progressResult;
            var enrollmentDate = row.getField("ENROLLMENT_DATE")


            if (language == "SPA") {
                testNumber = "CIR" + testMetadata.TEST_NUMBER_SUFFIX+"_SPA_TOT";
                scaleScore = _util.coalesce (
        			row.getField(testMetadata.TEST_FIELD_SUFFIX+"_"+language+"_V1")
        			,row.getField(testMetadata.TEST_FIELD_SUFFIX+"_"+language+"_V2")
        	    );
                progressResult = _util.coalesce(
                   row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_"+language+"_V1")
                   ,row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_"+language+"_V2")
                );
            } else {
                testNumber = "CIR" + testMetadata.TEST_NUMBER_SUFFIX + "_TOT"
                scaleScore = _util.coalesce (
        			 row.getField(testMetadata.TEST_FIELD_SUFFIX+"_V1")
                    ,row.getField(testMetadata.TEST_FIELD_SUFFIX+"_V2")
        	     );
                progressResult = _util.coalesce(
                    row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_V1")
                   ,row.getField("CP_"+testMetadata.TEST_FIELD_SUFFIX+"_V2")
                );
            }

           if(
     	    (scaleScore === undefined || scaleScore === null || scaleScore == "" || scaleScore == "--")&&
     	    (progressResult === undefined || progressResult === null || progressResult == "" || progressResult == "--")
     	     ){
         		return null;
         	}

            testScoreElement["TEST_NUMBER"] = testNumber;
            testScoreElement["TEST_PRIMARY_RESULT"] = primaryResultDecode[progressResult];

            testScoreElement["TEST_SCORE_TEXT"] = scaleScore;

            if(!isNaN(scaleScore)){
                testScoreElement["TEST_SCORE_VALUE"] = scaleScore;
                testScoreElement["TEST_SCALED_SCORE"] = scaleScore;
                testScoreElement["TEST_RAW_SCORE"] = scaleScore;
            }
            testScoreElement["TEST_CUSTOM_RESULT"] = enrollmentDate;


            return testScoreElement;

    }

    function mapTxkeaScore(row, testMetadata) {

    var testScoreElement = {};
    var testNumber;
    var language = testMetadata.LANGUAGE;
    var scaleScore;
    var progressResult;
    var enrollmentDate = row.getField("ENROLLMENT_DATE")


    if(language == "SP"){
        testNumber = "CIR_" + testMetadata.TEST_NUMBER_SUFFIX+"_SP";

        if (testMetadata.SUBITEM === '') {
            scaleScore = _util.coalesce (
                row.getField("TXKEA_" + testMetadata.TEST_FIELD_SUFFIX+"_" + language)
               ,row.getField("KEA_" + testMetadata.TEST_FIELD_SUFFIX+"_" + language)
           );
           progressResult = _util.coalesce(
            row.getField("CP_TXKEA_" + testMetadata.TEST_FIELD_SUFFIX+"_" + language)
           ,row.getField("CP_KEA_" + testMetadata.TEST_FIELD_SUFFIX+"_" + language)
           );
        } else {
            scaleScore = _util.coalesce (
               row.getField("TXKEA_" + testMetadata.TEST_FIELD_SUFFIX + "_" + language + "_TXKEA_" + testMetadata.SUBITEM + "_" + language)
               ,row.getField("KEA_" + testMetadata.TEST_FIELD_SUFFIX + "_" + language + "_TXKEA_" + testMetadata.SUBITEM + "_" + language)
           );
           progressResult = _util.coalesce(
            row.getField("CP_TXKEA_" + testMetadata.TEST_FIELD_SUFFIX + "_" + language + "_TXKEA_" + testMetadata.SUBITEM + "_" + language)
           ,row.getField("CP_KEA_" + testMetadata.TEST_FIELD_SUFFIX + "_" + language + "_TXKEA_" + testMetadata.SUBITEM + "_" + language)
           );
        }
    } else {
        testNumber ="CIR_" + testMetadata.TEST_NUMBER_SUFFIX;
        if (testMetadata.SUBITEM === '') {
            scaleScore = _util.coalesce (
                row.getField("TXKEA_" + testMetadata.TEST_FIELD_SUFFIX)
               ,row.getField("KEA_" + testMetadata.TEST_FIELD_SUFFIX)
           );
            progressResult = _util.coalesce(
                row.getField("CP_TXKEA_" + testMetadata.TEST_FIELD_SUFFIX)
                ,row.getField("CP_KEA_" + testMetadata.TEST_FIELD_SUFFIX)
           );
        } else {
            scaleScore = _util.coalesce (
               row.getField("TXKEA_" + testMetadata.TEST_FIELD_SUFFIX + "_TXKEA_"+ testMetadata.SUBITEM)
               ,row.getField("KEA_" + testMetadata.TEST_FIELD_SUFFIX + "_TXKEA_"+ testMetadata.SUBITEM)
           );
            progressResult = _util.coalesce(
               row.getField("CP_TXKEA_" + testMetadata.TEST_FIELD_SUFFIX + "_TXKEA_"+ testMetadata.SUBITEM)
              ,row.getField("CP_KEA_" + testMetadata.TEST_FIELD_SUFFIX + "_TXKEA_"+ testMetadata.SUBITEM)
           );
        }
    }

	if(
	    (scaleScore === undefined || scaleScore === null || scaleScore == "" || scaleScore == "--")&&
	    (progressResult === undefined || progressResult === null || progressResult == "" || progressResult == "--")
	  ){
    		return null;
    }

	testScoreElement["TEST_NUMBER"] = testNumber;
	testScoreElement["TEST_PRIMARY_RESULT"] = primaryResultDecode[progressResult];

    testScoreElement["TEST_SCORE_TEXT"] = scaleScore;

	if(!isNaN(scaleScore)){
		testScoreElement["TEST_SCORE_VALUE"] = scaleScore;
		testScoreElement["TEST_SCALED_SCORE"] = scaleScore;
		testScoreElement["TEST_RAW_SCORE"] = scaleScore;
    }
    testScoreElement["TEST_CUSTOM_RESULT"] = enrollmentDate;

    return testScoreElement;

   }

      function mapTxkeaOverallScore(row,testMetadata){
            var testScoreElement = {};
            var language = testMetadata.LANGUAGE;
            var testNumber;
            var scaleScore;
            var progressResult;

            if(language == "SP"){
                testNumber = "CIR_" + testMetadata.TEST_NUMBER_SUFFIX+"_SP_TOT";
                scaleScore = _util.coalesce (
                    row.getField("TXKEA_" + testMetadata.TEST_FIELD_SUFFIX+"_" + language)
                );
                progressResult = _util.coalesce(
                    row.getField("CP_TXKEA_" + testMetadata.TEST_FIELD_SUFFIX+"_" + language)
                );
            } else {
                testNumber = "CIR_" + testMetadata.TEST_NUMBER_SUFFIX + "_TOT";
                scaleScore = _util.coalesce (
                    row.getField("TXKEA_" + testMetadata.TEST_FIELD_SUFFIX)
                );
                progressResult = _util.coalesce(
                   row.getField("CP_TXKEA_" + testMetadata.TEST_FIELD_SUFFIX)
                );
            }

            if(
     	    (scaleScore === undefined || scaleScore === null || scaleScore == "" || scaleScore == "--")&&
     	    (progressResult === undefined || progressResult === null || progressResult == "" || progressResult == "--")
     	     ){
         		return null;
         	}


            testScoreElement["TEST_NUMBER"] = testNumber;
            testScoreElement["TEST_PRIMARY_RESULT"] = primaryResultDecode[progressResult];

            testScoreElement["TEST_SCORE_TEXT"] = scaleScore;

            if(!isNaN(scaleScore)){
                testScoreElement["TEST_SCORE_VALUE"] = scaleScore;
                testScoreElement["TEST_SCALED_SCORE"] = scaleScore;
                testScoreElement["TEST_RAW_SCORE"] = scaleScore;
            }

            return testScoreElement;

    }


        function mapPhonologicalScores(row, testMetadata) {
          var testScoreElement = {};
          var scaleScore     = row.getField(testMetadata.TEST_FIELD_SUFFIX);
          var progressResult = row.getField("CP_" + testMetadata.TEST_FIELD_SUFFIX);
          var dateField = row.getField(testMetadata.TEST_FIELD_SUFFIX + "_DATE");

          if ((!scaleScore || scaleScore === "") && (!progressResult || progressResult === "")) {
            return null;
          }
          var langSuffix = "";
          if (testMetadata.LANGUAGE === "SPA") {
            langSuffix = "_SPA";
          }

          testScoreElement["TEST_NUMBER"] = "CIR_" + testMetadata.TEST_NUMBER_SUFFIX + langSuffix;
          testScoreElement["TEST_PRIMARY_RESULT"] = primaryResultDecode[progressResult] || null;
          testScoreElement["TEST_SCORE_TEXT"] = scaleScore;

          if (!isNaN(scaleScore)) {
            testScoreElement["TEST_SCORE_VALUE"] = scaleScore;
            testScoreElement["TEST_SCALED_SCORE"] = scaleScore;
            testScoreElement["TEST_RAW_SCORE"] = scaleScore;
          }

          if (dateField && dateField !== "") {
            var convertedDate = dateConverter(dateField);
            if (convertedDate && convertedDate.finalDates) {
              testScoreElement["TEST_SCORE_ATTRIBUTES"] = convertedDate.finalDates;
            }
          }

          return testScoreElement;
        }

        function dateConverter(dateString) {

          if (!dateString || typeof dateString !== 'string' || dateString.trim() === '') {
            return { finalDates: null, months: null, days: null, years: null };
          }

          dateString = dateString.trim();
          if (dateString.indexOf(" ") !== -1) {
            dateString = dateString.split(" ")[0];
          }

          dateString = dateString.replace(/-/g, '/');

          var year, month, day, dateParts;

          // Handle continuous 8-digit strings (could be MMddyyyy or yyyyMMdd)
          if (/^\d{8}$/.test(dateString)) {
            if (parseInt(dateString.substring(0, 4), 10) > 1900) {
              // Likely YYYYMMDD format
              year = dateString.substring(0, 4);
              month = dateString.substring(4, 6);
              day = dateString.substring(6, 8);
            } else {
              // Otherwise MMddyyyy format
              month = dateString.substring(0, 2);
              day = dateString.substring(2, 4);
              year = dateString.substring(4, 8);
            }
          }
          // Handle YYYY/MM/DD format (allowing one or two digits for month and day)
          else if (/^\d{4}\/\d{1,2}\/\d{1,2}$/.test(dateString)) {
            dateParts = dateString.split('/');
            year = dateParts[0];
            month = dateParts[1];
            day = dateParts[2];
          }
          // Handle ambiguous DD/MM/YYYY or MM/DD/YYYY formats (one or two digits)
          else if (/^\d{1,2}\/\d{1,2}\/\d{4}$/.test(dateString)) {
            dateParts = dateString.split('/');
            // If the first number is greater than 12, assume DD/MM/YYYY
            if (parseInt(dateParts[0], 10) > 12) {
              day = dateParts[0];
              month = dateParts[1];
              year = dateParts[2];
            } else if (parseInt(dateParts[1], 10) > 12) { // MM/DD/YYYY
              month = dateParts[0];
              day = dateParts[1];
              year = dateParts[2];
            } else {
              // Ambiguous case: default to MM/DD/YYYY
              month = dateParts[0];
              day = dateParts[1];
              year = dateParts[2];
            }
          } else {
            return { finalDates: null, months: null, days: null, years: null };
          }

          var dateObj = new Date(year, parseInt(month, 10) - 1, day);
          if (isNaN(dateObj.getTime())) {
            return { finalDates: null, months: null, days: null, years: null };
          }

          // Format month and day to ensure two digits
          var finalMonth = ('0' + (dateObj.getMonth() + 1)).slice(-2);
          var finalDay = ('0' + dateObj.getDate()).slice(-2);
          var finalYear = dateObj.getFullYear();

          var finalDate = finalMonth + '/' + finalDay + '/' + finalYear;
          return { finalDates: finalDate, months: finalMonth, days: finalDay, years: finalYear };
        }


    /***************************************************************************
     Utility Functions
     ***************************************************************************/
    /**
     * Determines if two assessment records are for the same assessment admin
     *
     * @param signature The java signature of the file
     * @param hierarchy A JSON object containing file hierarchy values
     * @param one The first assessment record being compared
     * @param two The second assessment record being compared
     * @returns {number}
     */
    function groupAssessmentByNaturalKey(signature, hierarchy, one, two) {
        try {
            var assessmentAdminKey_one = generateAssessmentAdminKey(signature, hierarchy, one);
            var assessmentAdminKey_two = generateAssessmentAdminKey(signature, hierarchy, two);

            if(assessmentAdminKey_one === assessmentAdminKey_two) {
                return 1;
            } else {
                return -1;
            }
        } catch (exception) {
            throw `${_thisModuleName}.groupAssessmentByNaturalKey Exception: ${exception}`;
        }
    }

    /**
     * Generates an Assessment Admin Key using a combination of hierarchy values and natural keys from an assessment signature
     *
     * @param signature The java signature of the file
     * @param hierarchy A JSON object containing file hierarchy values
     * @param srcRecord The assessment record being processed
     * @returns {string}
     */
    function generateAssessmentAdminKey(signature, hierarchy, srcRecord) {
        var assessmentAdminKey = _assessmentIdentifier + "_" + _util.coalesce(AssessmentLoader.config.SYS_PARTITION_VALUE, AssessmentLoader.config.TENANT_CODE) + "_" + AssessmentLoader.config.DISTRICT_CODE + "_" + hierarchy.SCHOOL_YEAR;

        signature.getFormat().getNaturalKey().forEach(function(key) {
            assessmentAdminKey += "_" + _util.coalesce(srcRecord.getField(key), "");
        });

        var rawWave = srcRecord.getField("WAVE");
        if (rawWave != null && rawWave.trim() !== "") {
            var waveClean = rawWave.replace(/\s+/g, "");

            var waveCode = (typeof decodePeriod !== "undefined" && decodePeriod[waveClean]) ? decodePeriod[waveClean]: waveClean;
            assessmentAdminKey += "_" + waveCode;
        }
        return assessmentAdminKey;
    }


    return module;
}());